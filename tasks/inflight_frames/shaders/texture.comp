#version 430

layout(local_size_x = 32, local_size_y = 32) in;

layout(binding = 0, rgba8) uniform image2D resultImage;
layout(push_constant) uniform params {
  uvec2 iResolution;
  float iTime;
};

void mainImage(out vec4 fragColor, in vec2 fragCoord)
{
    float stars = pow(fract(sin(dot(fragCoord, vec2(20.0, 70.0))) * sin(iTime) * 4000.0), 200.0);

    vec3 nebula = vec3(smoothstep(0.8, 1.0, fract(sin(dot(vec2(fragCoord.x, sin(iTime)), vec2(3.0, sin(iTime) * 100.0))) * 100.0f)));
    nebula *= vec3(0.5, 0.4, 1.0);

    vec3 spaceColor = nebula + vec3(stars);
    fragColor = vec4(pow(spaceColor, vec3(0.4545)), 1.0);
}

void main()
{
  ivec2 uv = ivec2(gl_GlobalInvocationID.xy);

  vec4 fragCol;

  mainImage(fragCol, uv);

  if (uv.x < iResolution.x && uv.y < iResolution.y)
    imageStore(resultImage, uv, fragCol);
}
